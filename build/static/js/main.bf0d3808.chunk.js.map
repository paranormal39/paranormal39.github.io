{"version":3,"sources":["images/DesertRender2.png","logo.svg","components/Navbar.jsx","components/Jumbotron.jsx","components/Footer.jsx","pages/Home.jsx","pages/About.jsx","pages/Contact.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","react_default","a","createElement","className","class","Link","to","color","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","styles","Component","Jumbotron","href","role","Home","components_Navbar","src_components_Jumbotron","About","src","DesertRender2","height","width","Contact","App","BrowserRouter","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bf0d3808.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/DesertRender2.2c6a2f0f.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, {Component} from 'react';\r\nimport{Link} from'react-router-dom';\r\nimport './NavBar.css';\r\n\r\nclass Navbar extends Component{\r\n    render(){\r\n        return(\r\n     <nav className=\"navbar navbar-grey bg-grey \">\r\n     <div class='container'>\r\n      <Link class=\"navbar-brand\" to=\"/\" color=\"white\">Anthony Montanez</Link>\r\n      <button className=\"navbar-toggler collapsed\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarsExample01\" aria-controls=\"navbarsExample01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      </div>\r\n\r\n      <div className=\"navbar-collapse collapse\" id=\"navbarsExample01\" styles=\"\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n           <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/About\">About</Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/Contact\">Contact</Link>\r\n          </li>\r\n         \r\n        </ul>\r\n       \r\n      </div>\r\n    </nav>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Navbar","import React,{Component} from 'react';\r\nimport './Jumbotron.css';\r\n\r\nclass Jumbotron extends Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div class=\"jumbotron\">\r\n        <div className=\"container\">\r\n          <h1 className=\"display-3\">Hey thanks for stoping by</h1>\r\n          <p>wanna help support me go download my latest game on android give it a rating and a review just click the link below every download is greatly apreaciated</p>\r\n          <p><a className=\"btn btn-primary btn-lg\" href=\"#\" role=\"button\">Learn more Â»</a></p>\r\n        </div>\r\n      </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Jumbotron","import React, {Component} from 'react';\r\nimport './Footer.css';\r\n\r\nclass Footer extends Component{\r\n    render(){\r\n        return(\r\n<footer className=\"footer\">\r\n      <div className=\"container\">\r\n        <span className=\"text-muted\">this is where my technologys will go</span>\r\n      </div>\r\n    </footer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","import React, {Component} from 'react';\r\nimport './Home.css';\r\nimport Navbar from '../components/Navbar.jsx';\r\nimport Footer from '../components/Footer.jsx';\r\nimport Jumbotron from '../components/Jumbotron.jsx';\r\n\r\n\r\nclass Home extends Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Navbar />\r\n                <Jumbotron />\r\n                <div className=\"container\">\r\n            <h1 >Software Developer</h1>\r\n            <h2>Anthony Montanez</h2>\r\n            <body>\r\n                <div>\r\n                    <p>I have many years of self taught and projects i have completed at the moment, I offer a wide variety of services in software development \r\n                        from entertainment in video games/animation to more small business needs. I am a self taught software developer where I create websites \r\n                        for ease of use for small busienss owners.\r\n                    </p>\r\n                </div>\r\n\r\n                <div>\r\n                    <p>this is where im post a large body of text to fill out the page below</p>\r\n                </div>\r\n            </body>\r\n                  </div>\r\n                  \r\n                 \r\n            </div>\r\n           \r\n            \r\n           \r\n        );\r\n    }\r\n}\r\n\r\nexport default Home","import React, {Component} from 'react';\r\nimport './Home.css';\r\nimport Navbar from '../components/Navbar.jsx'; \r\nimport DesertRender2 from '../images/DesertRender2.png';\r\n\r\n\r\n\r\nclass About extends Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Navbar/>\r\n            <div class='container'>\r\n            <tbody>\r\n\r\n               <trow>\r\n                    I worked on various projest in software development with this website being one of them. I normally code in c# building games in unity\r\n                    also augmented reailty.I spend some of my free time in blender coming up with new 3d models for future projects or to test my developing skill\r\n\r\n                    \r\n                 </trow>\r\n                <trow>\r\n                 <img src={DesertRender2}height='350'width='350'/>\r\n                 A low poly sample of a desert area\r\n                 </trow>  \r\n                 <trow>\r\n                     I also make games trying new things and testing new technologys \r\n                     </trow> \r\n\r\n                \r\n                \r\n            </tbody>\r\n            </div>\r\n            </div>\r\n\r\n\r\n\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default About","import React, {Component} from 'react';\r\nimport './Home.css';\r\nimport Navbar from '../components/Navbar.jsx';\r\nimport Footer from '../components/Footer.jsx'; \r\n\r\nclass Contact extends Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                  <Navbar/>\r\n            <div class='container'>  \r\n          <div class='contactinfo'>\r\n            <body>\r\n                <div><b>if you wanna reach me the best way would be by email at amontanez09@gmail.com </b> </div>\r\n                \r\n              <div><b> You can also reach me at 432-448-1926</b></div>\r\n\r\n                if both fail you can try any of the social media outlets and I will get back to you soon\r\n\r\n               \r\n            </body>\r\n            </div>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact","import React, { Component } from 'react';\nimport {BrowserRouter as Router,Route } from 'react-router-dom';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport Home from './pages/Home.jsx'; \nimport About from './pages/About.jsx'; \nimport Contact from './pages/Contact'; \n\nclass App extends Component {\n  render() {\n    return (\n   <Router>\n     <div>\n     <Route exact path=\"/\" component={Home}/>\n     <Route path=\"/About\" component={About}/>\n     <Route path=\"/Contact\" component={Contact}/>\n     </div>\n   </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}